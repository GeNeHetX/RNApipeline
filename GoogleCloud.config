

/* Do only gene expression counting
*
*/
params.simpleCount=true


/*  MAJOR PARAMETER
*
*/
params.strand = 1

/*	Input data
*/
params.outputdir="gs://pipebuff/Novaseq_250322results"
params.sampleInputDir = "gs://pipebuff/Novaseq_250322/fastq"
params.sampleList = "subsamlist.txt"
params.samPsuffix1 = "_R1_001.fastq.gz"
params.samPsuffix2 = "_R2_001.fastq.gz"



/*	Input of Reference Genome and transcriptome
* either :
*					- Pre-computed, set directory  in params.ref. Ex. params.ref="gs://pipebuff/ensembl_v105_GRCh38_GRCm39"
*					- Set params.ref="no_ref" URL for GTF, fasta, cdna and known vcf
*/
params.ref="gs://pipebuff/ensembl_v107_GRCh38b"

params.fasta_ref= "http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz"
params.GTF= "http://ftp.ensembl.org/pub/release-107/gtf/homo_sapiens/Homo_sapiens.GRCh38.107.chr.gtf.gz"
params.known_vcf= "http://ftp.ensembl.org/pub/release-105/variation/vcf/homo_sapiens/1000GENOMES-phase_3.vcf.gz"
params.cdna= "http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz"





/*	Choose to run optional processes
* set to true or false. e.g.: params.kallisto=true runs kallisto
*/
params.kallisto=false
params.variant_calling=false




//STAR parametrs
params.alignIntronMax =1000000
params.alignMatesGapMax= 1000000
params.limitOutSJcollapsed = 1000000
params.limitSjdbInsertNsj = 1000000
params.outFilterMultimapNmax =100
params.winAnchorMultimapNmax =50
params.alignSJoverhangMin =15
params.alignSJDBoverhangMin =1
params.alignIntronMin =20
params.outFilterMatchNminOverLread =0
params.outFilterScoreMinOverLread = 0.3
params.outFilterMismatchNmax = 33
params.outFilterMismatchNoverLmax = 0.33

//kallisto parameters
params.bootstrap = 100
params.read_len = 120
params.read_sd=20

//Internal parameters (no need to change them)
params.picard= "/data/picard.jar"
params.gatk="/data/gatk-4.2.5.0/gatk-package-4.2.5.0-local.jar"

process {

    executor = 'google-lifesciences'

   withName : buildref{
        cpus = 16
        container= 'genehetx/genehetx-rnaseq:latest'
        memory = 40.GB
        disk = 300.GB
        }
    withName: doSTAR{
        cpus = 12
        container = 'genehetx/genehetx-rnaseq:latest'
        memory = 70.GB
        disk = 500.GB
    }

withName: doOnlySTARnCount{
    cpus = 12
    container = 'genehetx/genehetx-rnaseq:latest'
    memory = 70.GB
    disk = 300.GB
}
   withName: FCounts{
        cpus = 16
        container = 'genehetx/genehetx-rnaseq:latest'
        memory = 16.GB
        disk = 2.TB
        }
withName: kallisto_paired_end{
        cpus = 16
        container = 'genehetx/genehetx-rnaseq:latest'
        memory = 10.GB
        disk = 300.GB
        }
withName: kallisto_single_end{
        cpus = 16
        container = 'genehetx/genehetx-rnaseq:latest'
        memory = 10.GB
        disk = 300.GB
        }
  withName: gatk_vc{
        cpus = 16
        container = 'genehetx/genehetx-rnaseq:latest'
        memory = 40.GB
        disk = 1.TB
        }
withName: Vep{
        cpus = 16
        container = 'genehetx/vep_hs:1.0'
        memory = 40.GB
        disk = 1.TB
        }

  withName:multiqc{
        cpus = 4
        container = 'genehetx/genehetx-rnaseq:latest'
        memory = 10.GB
        disk = 1.TB

        }

        errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
    maxRetries = 2

}

google {
    project = 'rnaseq-000000'
    zone = 'europe-west4-a'
    lifeSciences.bootDiskSize=300.GB
    google.lifeSciences.preemptible=true
}


docker.enabled = true
docker.temp="auto"

docker.runOptions = '-u $(id -u):$(id -g)'
report.enabled = true
